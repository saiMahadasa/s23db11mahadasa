extends layout

block content
    head
        link(rel='stylesheet', href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css', integrity='sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh', crossorigin='anonymous')

    h1.text-primary= title

    if (toShow == null)
        h2.text-danger No instance to update
    else
        - let id = toShow._id
        - let aeroplane_type = toShow.aeroplane_type
        - let color = toShow.color
        - let number_of_wings = toShow.number_of_wings

        div.row.mb-2
            div.mr-1.text-info ID is
            div.text-success #{id}

        - let actionid = "/resource/aeroplane/" + id
        form#AeroplaneForm(class='mt-3', action=actionid, method="PUT")
            div.form-group
                label.aeroplaneAttr(for='aeroplane_type' class='text-info') Aeroplane Type
                input#aeroplane_type.form-control(type='text', name='aeroplane_type', value=aeroplane_type)
            div.form-group
                label.aeroplaneAttr(for='color' class='text-info') Color
                input#color.form-control(type='text', name='color', value=color)
            div.form-group
                label.aeroplaneAttr(for='number_of_wings' class='text-info') Number of Wings
                input#number_of_wings.form-control(type='number', name='number_of_wings', value=number_of_wings)
            input.btn.btn-primary(type="submit" value="Update")

        script.
            document.forms.AeroplaneForm.addEventListener('submit', async (event) => {
                event.preventDefault();
                try {
                    // TODO: Add loading spinner or other user feedback

                    const resp = await fetch(event.target.action, {
                        method: 'PUT',
                        body: new URLSearchParams(new FormData(event.target))
                    });

                    if (!resp.ok) {
                        throw new Error('Network response was not ok');
                    }

                    // Attempt to parse the response as JSON
                    const body = await resp.json();
                    alert("Update succeeded");
                    // TODO: Handle the response body as needed
                } catch (error) {
                    // Handle non-JSON responses gracefully
                    alert("Update failed: " + error.message);

                    // TODO: Handle the error appropriately
                }
            });
